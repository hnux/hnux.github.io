<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[CSS 学习笔记]]></title>
    <url>%2F2018%2F07%2F19%2F027_CSS_Notes%2F</url>
    <content type="text"><![CDATA[1. CSS 基础 CSS 选择器参考手册 CSS 核心概念和知识点 常用命名惯例参考 默认浏览器样式 1.1 @import 一个 .css 要引入其他 .css , 要把 @import url(xxx.css); 语句写在文件的开头; 用得比较少; 1.2 行内样式: 标签上加 style 属性 行内CSS, 也叫行级CSS, 内联CSS; 通常行内CSS作为测试使用, 可以查找代码中bug; 便捷高效, 优先级很高; 可复用性差; css 指定得越确切, 优先级越高; 行内 &gt; 页级 &gt; 外联; 优先级最高的是, 在 .css 里, 选择器的定义语句末尾加入 !important 关键词; 谨慎使用; 1.3 页级样式和外联样式 页级样式(页内, 内部): .html 的 &lt;head&gt; 中添加 &lt;style&gt; , 作用范围仅限于本页元素; 外联样式: .html 的 &lt;head&gt; 中添加 &lt;link&gt; 引入 .css 文件; 最常用, 最灵活; 1.4 元素选择器 , 用于区隔同组的元素选择器 yourElementName ; 太长的话, 可以换行; 1.5 class 选择器 .html 中的 class 属性用空格区隔; class 选择器 .yourClassName 可以组合使用, 中间没有空格, 表示同时选中; 如果有空格, 表示层级关系; 1.6 id 选择器 id 选择器 #yourIdName 最好不要重复; 1.7 属性选择器 属性选择器 [yourAttributeName] ; 与元素选择器配合使用; 传入属性值的方式(完全匹配) [yourAttributeName=&quot;yourValue&quot;] ; 包含属性值的方式(部分匹配) [yourAttributeName*=&quot;yourValue&quot;] ; 匹配开始的字符 [yourAttributeName^=&quot;yourValue&quot;] ; 匹配结束的字符 [yourAttributeName$=&quot;yourValue&quot;] ; 应用: 过滤安全链接, 自定义不同类型的输入框… 1234567891011121314151617181920212223242526272829303132333435/* title 属性, 相当于注释, 鼠标悬停会显示注释; */[title] &#123; background: red; /* color 为文本颜色 */ color: white; &#125;/* 1. 完全匹配 */[title="点击此处登录"] &#123; background: green;&#125;/* 2. 部分匹配 */[title*="点击"] &#123; background: blue;&#125;/* 3. 匹配开头 */[title^="点击"] &#123; background: yellow;&#125;/* 4. 匹配结尾 */[title$="博客"] &#123; background: violet;&#125;/* 5. 用来过滤安全链接 */a[href^="https://hnux.github.io"] &#123; color: blue;&#125;/* 6. 自定义不同类型的输入框 */ input[type="submit"] &#123; border: 0;&#125;input[type="text"] &#123; width: 100%; border: 5px solid black; padding: 10px;&#125; 1.8 后代选择器 * 是元素通配符; 优先级比较低; 用得最频繁的选择方式; 123.a .c &#123; border: 2px solid black;&#125; 1.9 相邻选择器 只会从上往下选, 过去了就过去了; 主要是出于性能方面的考虑; + yourSelector 表示选中下一个; ~ yourSelector 表示选中接下来的所有平级元素; 123456.b + div &#123; background: rgba(0, 255, 0, .2);&#125;.a ~ div &#123; background: rgba(0, 0, 255, .2);&#125; 1.10 伪类选择器 表现得像类, 用起来像类, 但事实上又不是类, 更多的是一种状态; 锚: a:link , a:visited , a:hover , a:active ; 按钮: button:hover , button:active ; 输入框: input:focus ; 1234567891011121314151617181920a:link &#123; color: blue;&#125;a:visited &#123; color: gray;&#125;button:hover,a:hover &#123; background: #888;&#125;button:active,a:active &#123; background: #333; color: #fff;&#125;input:focus &#123; /* 去掉轮廓 */ outline: none; background: #aaa; &#125; 1.11 伪元素选择器 结构上不存在, 逻辑上存在; 建议使用 : , 因为老旧的浏览器对它的兼容性更好, :: 出现得比较晚; 段落: p:first-letter ; 在元素尾部追加内容: .yourClassName:after ; 在元素头部添加内容: .yourClassName:before ; 为 [ 第 1 个 / 第 n 个 / 最后一个] 元素添加样式: .yourClassName:[first-child / nth-child(x) / last-child] ; 1234567891011121314151617181920212223242526/* 1. 段落首字母 */p:first-letter &#123; font-size: 30px;&#125;/* 2. 元素尾部追加 */.help:after &#123; content: "[?]"; color: blue;&#125;/* 2.1 元素头部插入 */.help::before &#123; content: "**"; color: red;&#125;/* 3. 为第 1 个元素添加样式 */div p:first-child &#123; color: blue;&#125;/* 3.1 为最后一个元素添加样式 */div p:last-child &#123; color: red;&#125;/* 3.2 为第 n 个元素添加样式 */div p:nth-child(1) &#123; color: green;&#125; 1.12 选择器权重 指定得越确切, 优先级越高; 谨慎使用内联样式; style 属性 (内联) ID 选择器 [类 / 属性 / 伪类] 选择器 元素选择器 1000 0100 0010 0001 1.13 字体属性1.13.1 font-family font-family description serif 衬线字体, 在笔画拐弯的地方会有装饰, 更古典 sans-serif 非衬线字体, 更加圆滑, 更现代 从第一个字体开始扫描, 如果都没找到, 则用默认字体; 1.13.2 font-weight 值在 100 - 900 之间; normal; bold; 1.13.3 font-size px; %: 母元素字体大小的百分比; inherit: 继承母元素的字体大小; 1.14 文本属性 text-align(对齐方式): left; center; justify; line-height(行高): 数字(字体大小的倍数); px; text-decoration: underline; overline; line-through; none; 1.15 display 属性1.15.1 block(块级元素) 默认为浏览器宽度; 即使设定了 width , 依然用 margin 占着剩余宽度; div 默认为 block ; block 可以想象成固定的盒子; 1.15.2 inline(行内元素) 一般用于文字; inline 可以想象成软的袋子; 添加 padding , margin 只对左右有效, 对上下无效; 1.15.3 inline-block(行内块元素) 可以添加 padding , margin , 而且还可以流动; 一般用于按钮, 导航栏链接; 1.15.4 none 用于隐藏元素; 存在于 DOM 里, 但不显示; 1.16 块级框1.16.0 层次关系 margin(外边距) &gt; border(边框) &gt; padding(内边距) &gt; content(内容区); 1.16.1 content width; height; 1.16.2 padding padding: px; 1.16.3 border border: border-width border-style border-color; 1.16.4 margin margin: px;]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[「关于我」]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[这里是「关于我」页面]]></content>
  </entry>
  <entry>
    <title><![CDATA[「分类」]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"><![CDATA[这里是「分类」页面]]></content>
  </entry>
  <entry>
    <title><![CDATA[「标签」]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"><![CDATA[这里是「标签」页面]]></content>
  </entry>
</search>
